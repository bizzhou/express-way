package com.expressway.controller;

import com.expressway.service.EmployeeService;
import com.expressway.service.ManagerLevelService;
import com.expressway.service.impl.ManagerLevelServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Map;
import java.util.List;
import java.sql.SQLException;

@CrossOrigin(origins = "http://localhost:4200")
@RestController
public class ManagerLevelApiController {

    @Autowired
    ManagerLevelService managerLevelService;

    /**
     * Get employee who generate the most revenue
     * @return
     * @throws SQLException
     */
    @RequestMapping(value = "/manager/revenue/employee-most-revenue", method = RequestMethod.GET)
    public ResponseEntity<Integer> employeeWithMostRevenue() throws SQLException {

        Integer ssn = managerLevelService.getEmployeeWithMostRevenue();
        if (ssn != -1)
            return new ResponseEntity<Integer>(ssn, HttpStatus.OK);
        return new ResponseEntity<Integer>(HttpStatus.BAD_REQUEST);

    }

    /**
     * Get customer who generate the most revenue
     * @return
     * @throws SQLException
     */
    @RequestMapping(value = "/manager/revenue/customer-most-spent", method = RequestMethod.GET)
    public ResponseEntity<String> customerWithMostSpent() throws SQLException {

        String customerAcct = managerLevelService.getCustomerWithMostSpent();
        if (customerAcct != null)
            return new ResponseEntity<String>(customerAcct, HttpStatus.OK);
        return new ResponseEntity<String>(HttpStatus.BAD_REQUEST);

    }

    /**
     * Get a summary listing of revenue generated by a particular flight
     * @param airline
     * @param flightNumber
     * @return
     * @throws SQLException
     */
    @RequestMapping(value = "/manager/revenue/{airline}/{flightNumber}", method = RequestMethod.GET)
    public ResponseEntity<List<Map<String, Object>>> getRevenueByFlight(@PathVariable("airline") String airline,
                                                                   @PathVariable("flightNumber") int flightNumber) throws SQLException {

        List<Map<String, Object>> summary = managerLevelService.getRevenueByFlight(airline, flightNumber);

        if (summary != null)
            return new ResponseEntity<List<Map<String, Object>>>(summary, HttpStatus.OK);
        return new ResponseEntity<List<Map<String, Object>>>(HttpStatus.BAD_REQUEST);

    }


}
