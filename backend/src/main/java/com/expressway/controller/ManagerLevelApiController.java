package com.expressway.controller;

import com.expressway.util.Helper;
import com.expressway.service.EmployeeService;
import com.expressway.service.ManagerLevelService;
import com.expressway.service.impl.ManagerLevelServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.Map;
import java.util.List;
import java.sql.SQLException;

@CrossOrigin(origins = "http://localhost:4200")
@RestController
public class ManagerLevelApiController {

    @Autowired
    ManagerLevelService managerLevelService;

    @Autowired
    Helper helper;

    /**
     * Get employee who generate the most revenue
     * @return employee ssn
     * @throws SQLException
     */
    @RequestMapping(value = "/manager/revenue/employee-most-revenue", method = RequestMethod.POST)
    public ResponseEntity<Integer> employeeWithMostRevenue() throws SQLException {

        Integer ssn = managerLevelService.getEmployeeWithMostRevenue();
        if (ssn != -1)
            return new ResponseEntity<>(ssn, HttpStatus.OK);
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);

    }

    /**
     * Get customer who generate the most revenue
     * @return customer account number
     * @throws SQLException
     */
    @RequestMapping(value = "/manager/revenue/customer-most-spent", method = RequestMethod.POST)
    public ResponseEntity<String> customerWithMostSpent() throws SQLException {

        String customerAcct = managerLevelService.getCustomerWithMostSpent();
        if (customerAcct != null)
            return new ResponseEntity<>(customerAcct, HttpStatus.OK);
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);

    }

    /**
     * Get a summary listing of revenue generated by a particular flight
     * @param airline
     * @param flightNumber
     * @return
     * @throws SQLException
     * sample access: http://localhost:8080/manager/revenue?airline=AA&flightNumber=111
     */
    @RequestMapping(value = "/manager/revenue", method = RequestMethod.POST, params = "airline")
    public ResponseEntity<List<Map<String, Object>>> getRevenueByFlight(@RequestParam("airline") String airline,
                                                                   @RequestParam("flightNumber") int flightNumber) {

        List<Map<String, Object>> summary = managerLevelService.getRevenueByFlight(airline, flightNumber);

        if (summary != null)
            return new ResponseEntity<>(summary, HttpStatus.OK);
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);

    }

    /**
     * Get a summary listing of revenue generated by a destination city
     * @param destinationCity
     * @return
     * @throws SQLException
     * sample access: http://localhost:8080/manager/revenue?destinationCity=New%20York
     */
    @RequestMapping(value = "/manager/revenue", method = RequestMethod.POST, params = "destinationCity")
    public ResponseEntity<List<Map<String, Object>>> getRevenueByCity(@RequestParam("destinationCity") String destinationCity) {

        List<Map<String, Object>> summary = managerLevelService.getRevenueByCity(destinationCity);

        if (summary != null)
            return new ResponseEntity<>(summary, HttpStatus.OK);
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);

    }

    /**
     * Get a summary listing of revenue generated by a customer account
     * @param customerAcct
     * @return
     */
    @RequestMapping(value = "/manager/revenue", method = RequestMethod.POST, params = "customerAccount")
    public ResponseEntity<List<Map<String, Object>>> getRevenueByCustomer(@RequestParam("customerAccount") String customerAcct) {

        List<Map<String, Object>> summary = managerLevelService.getRevenueByCustomer(customerAcct);

        if (summary != null)
            return new ResponseEntity<>(summary, HttpStatus.OK);
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);

    }

    @RequestMapping(value = "/manager/reservation", method = RequestMethod.POST, params = "airline")
    public ResponseEntity<List<Map<String, Object>>> getReservationsByFlight(@RequestParam("airline") String airline,
                                                                            @RequestParam("flightNumber") int flightNumber) {

        List<Map<String, Object>> summary = managerLevelService.getReservationByFlight(airline, flightNumber);

        if (summary != null)
            return new ResponseEntity<>(summary, HttpStatus.OK);
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);

    }

    @RequestMapping(value = "/manager/reservation", method = RequestMethod.POST, params = "customerName")
    public ResponseEntity<List<Map<String, Object>>> getReservationsByCustomerName(@RequestParam("customerName") String customerName) {

        List<Map<String, Object>> summary = managerLevelService.getReservationByCustomerName(customerName);

        if (summary != null)
            return new ResponseEntity<>(summary, HttpStatus.OK);
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);

    }

    /**
     * Get monthly sales report
     * @param year yyyy
     * @param month mm
     * @return monthly sales
     * sample access: http://localhost:8080/manager/monthly-sales-report?year=2011&month=01
     */
    @RequestMapping(value = "/manager/monthly-sales-report", method = RequestMethod.POST)
    public ResponseEntity<Double> getMonthlySalesReport(@RequestParam("year") String year, @RequestParam("month") String month) {

        String startDate = helper.getStartDate(year, month);
        String endDate = helper.getEndDate(year, month);

        Double sales = managerLevelService.getMonthlySalesReport(startDate, endDate);

        if (sales != -1)
            return new ResponseEntity<>(sales, HttpStatus.OK);
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);

    }


}
